---
title: "Final Project"
author: "Howard"
date: "2024-12-08"
output: html_document
---


•	Datasets
o	Credit Card Fraud Detection
	https://www.kaggle.com/datasets/mlg-ulb/creditcardfraud
o	Default of Credit Card Clients Dataset
	https://www.kaggle.com/datasets/uciml/default-of-credit-card-clients-dataset
<!-- o	Predict Droughts using Weather & Soil Data
	https://www.kaggle.com/datasets/cdminix/us-drought-meteorological-data -->
o	HR Analytics: Job Change of Data Scientists
	https://www.kaggle.com/datasets/arashnic/hr-analytics-job-change-of-data-scientists 
o	Diabetes Health Indicators Dataset
	https://www.kaggle.com/datasets/alexteboul/diabetes-health-indicators-dataset?select=diabetes_012_health_indicators_BRFSS2015.csv
o	Bank Account Fraud Dataset Suite
	https://www.kaggle.com/datasets/sgpjesus/bank-account-fraud-dataset-neurips-2022 

Interest in insurance detection
https://www.kaggle.com/datasets/arashnic/imbalanced-data-practice


Reference
https://statistics.berkeley.edu/sites/default/files/tech-reports/666.pdf
https://link.springer.com/article/10.1023/A:1010933404324
https://ieeexplore.ieee.org/document/5128907
https://ieeexplore.ieee.org/abstract/document/8122151

devtools::document()
devtools::check()
devtools::clean_dll()
devtools::build()

remove.packages("ImbalanceRF")

```{r setup, include=FALSE}
library(dplyr)
library(caret)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(randomForest)
library(missForest)
library(caret)
library(robustbase)
library(smotefamily)
library(parallel)
library(data.table)
seed <- 2024
set.seed(seed)

# Function to check if the package exists and install if missing
install_and_load <- function(package_name, github_repo, install=FALSE) {
  if (!requireNamespace(package_name, quietly = TRUE)) {
    cat(paste("Package", package_name, "not found. Installing from GitHub...\n"))
    devtools::install_github(github_repo)
  } else if (install) {
    detach("package:ImbalanceRF", unload = TRUE)
    devtools::install_github(github_repo)
  } else {
    cat(paste("Package", package_name, "already installed. Loading it...\n"))
  }
  
  # Load the package
  library(package_name, character.only = TRUE)
}

# Example Usage
install_and_load("ImbalanceRF", "howie-zeng/MyPackage", install=TRUE)

data <- load_data()


df_list <- process_all_dataframes(copy(data))
explore_datasets(df_list)
```

```{r}
df_split_results <- split_data(copy(df_list), 'target')




```

```{r}
# # Function to improve plotting
# plot_categorical_distributions <- function(data, dataset_name, max_levels = 10, ncol = 2) {
#   # Identify categorical features
#   categorical_features <- names(data)[sapply(data, function(col) is.character(col) || is.factor(col))]
# 
#   # Prepare data for plotting
#   categorical_data <- data %>%
#     select(all_of(categorical_features)) %>%
#     pivot_longer(cols = everything(), names_to = "Feature", values_to = "Value") %>%
#     group_by(Feature, Value) %>%
#     summarize(Count = n(), .groups = "drop") %>%
#     arrange(Feature, desc(Count)) %>%
#     group_by(Feature) %>%
#     slice_max(order_by = Count, n = max_levels)  # Limit to top levels for each feature
# 
#   # Create the plot
#   ggplot(categorical_data, aes(x = reorder(Value, Count), y = Count, fill = Feature)) +
#     geom_bar(stat = "identity") +
#     facet_wrap(~Feature, scales = "free", ncol = ncol) +
#     labs(title = paste("Categorical Feature Distributions in", dataset_name),
#          x = "Value",
#          y = "Count") +
#     theme_minimal() +
#     theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
#           legend.position = "none") +
#     scale_fill_brewer(palette = "Set2")
# }
# 
# 



```

